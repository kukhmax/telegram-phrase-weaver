// –°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ (i18n)

// –û–±—ä–µ–∫—Ç —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
const translations = {
    ru: {
        // –û–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
        cancel: '–û—Ç–º–µ–Ω–∞',
        back: '–ù–∞–∑–∞–¥',
        delete: '–£–¥–∞–ª–∏—Ç—å',
        edit: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        create: '–°–æ–∑–¥–∞—Ç—å',
        
        // –Ø–∑—ã–∫–∏
        interface_language: '–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
        russian: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π',
        english: 'üá∫üá∏ English',
        
        // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        my_decks: '–ú–æ–∏ –∫–æ–ª–æ–¥—ã:',
        no_decks_message: '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–ª–æ–¥. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∫–æ–ª–æ–¥—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤!',
        create_deck: '–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–¥—É',
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã
        deck_creation: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã',
        deck_name: '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã',
        deck_name_placeholder: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã',
        deck_description: '–û–ø–∏—Å–∞–Ω–∏–µ:',
        deck_description_placeholder: '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã',
        learning_language: '–ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫',
        translation_language: '–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞',
        select_language: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫',
        create_deck_btn: '‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–¥—É',
        back_to_main: '‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é',
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ—Ä–∞–∑
        phrase_generation: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫',
        phrase_label: '–§—Ä–∞–∑–∞:',
        phrase_placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è',
        keyword_label: '–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ:',
        keyword_placeholder: '–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ',
        enrich_button: '–û–±–æ–≥–∞—Ç–∏—Ç—å',
        enriching: '–û–±–æ–≥–∞—â–∞–µ–º...',
        phrases_for_training: '–§—Ä–∞–∑—ã –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        phrases_count: '—Ñ—Ä–∞–∑',
        selected: '–≤—ã–±—Ä–∞–Ω–æ',
        select_all: '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ',
        save_selected: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ',
        regenerate: '–û–±–æ–≥–∞—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ',
        
        // –ö–∞—Ä—Ç–æ—á–∫–∏
        cards: '–ö–∞—Ä—Ç–æ—á–∫–∏',
        training: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
        
        // –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
        enter_translation: '–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥...',
        enter_phrase: '–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É...',
        check: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å',
        correct_answer: '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:',
        again: '–°–Ω–æ–≤–∞',
        good: '–•–æ—Ä–æ—à–æ',
        easy: '–õ–µ–≥–∫–æ',
        back_to_main_from_training: '‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é',
        training_complete: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!',
        
        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        cards: '–ö–∞—Ä—Ç–æ—á–∫–∏',
        training: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
        delete: '–£–¥–∞–ª–∏—Ç—å',
        select: '–í—ã–±—Ä–∞—Ç—å',
        back_to_main: '‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é',
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–æ–¥
        total: '–í—Å–µ–≥–æ',
        repeat: '–ü–æ–≤—Ç–æ—Ä',
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_button: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        statistics: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        general_stats: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        total_decks: '–í—Å–µ–≥–æ –∫–æ–ª–æ–¥',
        total_cards: '–í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫',
        learned_cards: '–ò–∑—É—á–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏',
        cards_for_repeat: '–ö–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞',
        repeat_stats: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π',
        again_cards: '–°–Ω–æ–≤–∞',
        good_cards: '–•–æ—Ä–æ—à–æ',
        easy_cards: '–õ–µ–≥–∫–æ',
        deck_distribution: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–æ–ª–æ–¥–∞–º',
        daily_training: '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
        close: '–ó–∞–∫—Ä—ã—Ç—å',
        
        // –°–æ–æ–±—â–µ–Ω–∏—è
        error: '–û—à–∏–±–∫–∞',
        try_again: '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞',
        card_deleted: '–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!',
        delete_confirmation: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ä—Ç–æ—á–∫—É?',
        training_interruption: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
        enter_answer: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç',
        
        // –û—à–∏–±–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        card_delete_error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
        audio_playback_error: '–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ',
        audio_generation_error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ',
        deck_name_min_length: '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞',
        select_both_languages: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ —è–∑—ã–∫–∞',
        languages_must_differ: '–ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫ –∏ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–æ–ª–∂–Ω—ã –æ—Ç–ª–∏—á–∞—Ç—å—Å—è',
        deck_creation_error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–æ–¥—ã:',
        deck_deletion_confirm: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–ª–æ–¥—É',
        deck_deletion_error: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–ª–æ–¥—ã:',
        fill_all_fields: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è',
        cards_saved: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {count} –∫–∞—Ä—Ç–æ—á–µ–∫!',
        training_completed: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ã –∏–∑—É—á–∏–ª–∏ {count} –∫–∞—Ä—Ç–æ—á–µ–∫.',
        loading_cards: '–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏...',
        loading_decks: '–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à–∏ –∫–æ–ª–æ–¥—ã...',
        saving_cards: '–°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏...',
        loading_training_cards: '–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏...',
        loading_stats: '–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...',
        stats_load_error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
        no_data: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
        
        // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        fill_this_field: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ.',
        select_item_from_list: '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ —Å–ø–∏—Å–∫–∞.',
        enter_valid_value: '–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.',
         
          // –§—É—Ç–µ—Ä
        app_version: 'PhraseWeaver v0.1.0'
    },
    
    en: {
        // General elements
        settings: 'Settings',
        save: 'Save',
        cancel: 'Cancel',
        back: 'Back',
        delete: 'Delete',
        edit: 'Edit',
        create: 'Create',
        
        // Languages
        interface_language: 'Interface Language',
        russian: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π',
        english: 'üá∫üá∏ English',
        
        // Main page
        my_decks: 'My Decks:',
        no_decks_message: 'You don\'t have any decks yet. Create your first deck to start learning languages!',
        create_deck: 'Create Deck',
        
        // Deck creation
        deck_creation: 'Deck Creation',
        deck_name: 'Deck Name',
        deck_name_placeholder: 'Enter deck name',
        deck_description: 'Description:',
        deck_description_placeholder: 'Enter deck description',
        learning_language: 'Learning Language',
        translation_language: 'Translation Language',
        select_language: 'Select Language',
        create_deck_btn: '‚ûï Create Deck',
        back_to_main: '‚Üê Back to Main',
        
        // Phrase generation
        phrase_generation: 'Card Generation',
        phrase_label: 'Phrase:',
        phrase_placeholder: 'Enter phrase for learning',
        keyword_label: 'Keyword:',
        keyword_placeholder: 'Enter keyword',
        enrich_button: 'Enrich',
        enriching: 'Enriching...',
        phrases_for_training: 'Phrases for Training',
        phrases_count: 'phrases',
        selected: 'selected',
        select_all: 'Select All',
        save_selected: 'Save Selected',
        regenerate: 'Regenerate',
        
        // Cards
        cards: 'Cards',
        training: 'Training',
        
        // Training
        enter_translation: 'Enter translation...',
        enter_phrase: 'Enter phrase...',
        check: 'Check',
        correct_answer: 'Correct answer:',
        again: 'Again',
        good: 'Good',
        easy: 'Easy',
        back_to_main_from_training: '‚Üê Back to Main',
        training_complete: 'Training Complete!',
        
        // Action buttons
        cards: 'Cards',
        training: 'Training',
        delete: 'Delete',
        select: 'Select',
        back_to_main: '‚Üê Back to Main',
        
        // Deck statistics
        total: 'Total',
        repeat: 'Repeat',
        
        // Statistics
        stats_button: 'Statistics',
        statistics: 'Statistics',
        general_stats: 'General Statistics',
        total_decks: 'Total Decks',
        total_cards: 'Total Cards',
        learned_cards: 'Learned Cards',
        cards_for_repeat: 'Cards for Repeat',
        repeat_stats: 'Repeat Statistics',
        again_cards: 'Again',
        good_cards: 'Good',
        easy_cards: 'Easy',
        deck_distribution: 'Deck Distribution',
        daily_training: 'Daily Training',
        close: 'Close',
        
        // Messages
        error: 'Error',
        try_again: 'Try Again',
        card_deleted: 'Card deleted successfully!',
        delete_confirmation: 'Are you sure you want to delete this card?',
        training_interruption: 'Are you sure you want to interrupt the training?',
        enter_answer: 'Please enter an answer',
        
        // Errors and notifications
        card_delete_error: 'Error deleting card. Please try again.',
        audio_playback_error: 'Audio playback error',
        audio_generation_error: 'Audio generation error',
        deck_name_min_length: 'Deck name must contain at least 2 characters',
        select_both_languages: 'Please select both languages',
        languages_must_differ: 'Learning language and translation language must be different',
        deck_creation_error: 'Deck creation error:',
        deck_deletion_confirm: 'Are you sure you want to delete deck',
        deck_deletion_error: 'Deck deletion error:',
        fill_all_fields: 'Please fill in all fields',
        cards_saved: 'Saved {count} cards!',
        training_completed: 'Training completed! You studied {count} cards.',
        loading_cards: 'Loading cards...',
        loading_decks: 'Loading your decks...',
        saving_cards: 'Saving cards...',
        loading_training_cards: 'Loading cards for training...',
        loading_stats: 'Loading statistics...',
        stats_load_error: 'Error loading statistics',
        no_data: 'No data available',
        
        // Validation hints
        fill_this_field: 'Please fill out this field.',
        select_item_from_list: 'Please select an item in the list.',
        enter_valid_value: 'Please enter a valid value.',
         
          // Footer
        app_version: 'PhraseWeaver v0.1.0'
    }
};

// –¢–µ–∫—É—â–∏–π —è–∑—ã–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
let currentLanguage = localStorage.getItem('interface_language') || 'en';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
function t(key, params = {}) {
    let translation = translations[currentLanguage][key] || translations['ru'][key] || key;
    
    // –ó–∞–º–µ–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å—Ç—Ä–æ–∫–µ
    Object.keys(params).forEach(param => {
        translation = translation.replace(`{${param}}`, params[param]);
    });
    
    return translation;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
function setLanguage(language) {
    if (translations[language]) {
        currentLanguage = language;
        localStorage.setItem('interface_language', language);
        updateInterface();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
function getCurrentLanguage() {
    return currentLanguage;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateInterface() {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º data-translate
    document.querySelectorAll('[data-translate]').forEach(element => {
        const key = element.getAttribute('data-translate');
        const translation = t(key);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å placeholder, title –∏–ª–∏ textContent
        if ((element.tagName === 'INPUT' && (element.type === 'text' || element.type === 'email' || element.type === 'password')) || 
            element.tagName === 'TEXTAREA') {
            // –î–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º placeholder
            if (element.hasAttribute('placeholder')) {
                element.placeholder = translation;
            } else {
                element.textContent = translation;
            }
        } else if (element.hasAttribute('title')) {
            // –î–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å title –æ–±–Ω–æ–≤–ª—è–µ–º title
            element.title = translation;
        } else {
            // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ–º textContent
            element.textContent = translation;
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    updateSpecialElements();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    updateValidationMessages();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function updateSpecialElements() {
    // –û–±–Ω–æ–≤–ª—è–µ–º tooltip FAB –∫–Ω–æ–ø–∫–∏
    const fabTooltip = document.querySelector('.fab .tooltip');
    if (fabTooltip) {
        fabTooltip.textContent = t('create_deck');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º title FAB –∫–Ω–æ–ø–∫–∏
    const fabButton = document.getElementById('add-deck-btn');
    if (fabButton) {
        fabButton.title = t('create_deck');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º placeholder –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    const deckNameInput = document.getElementById('deck-name');
    if (deckNameInput) {
        deckNameInput.placeholder = t('deck_name_placeholder');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º placeholder –ø–æ–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ
    const answerInput = document.getElementById('answer-input');
    if (answerInput) {
        const isReverse = answerInput.getAttribute('data-reverse') === 'true';
        answerInput.placeholder = isReverse ? t('enter_phrase') : t('enter_translation');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"
    const correctAnswerElements = document.querySelectorAll('.correct-answer');
    correctAnswerElements.forEach(element => {
        if (element.textContent.includes(':')) {
            const answerText = element.textContent.split(':')[1];
            element.textContent = t('correct_answer') + answerText;
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Ñ—Ä–∞–∑
    updatePhrasesCounter();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ —Ñ—Ä–∞–∑
function updatePhrasesCounter() {
    const totalElement = document.getElementById('total-phrases-count');
    const selectedElement = document.getElementById('selected-phrases-count');
    const saveCountElement = document.getElementById('save-count');
    
    if (totalElement && selectedElement) {
        const totalCount = totalElement.textContent;
        const selectedCount = selectedElement.textContent;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å—á–µ—Ç—á–∏–∫–∞
        const counterContainer = document.querySelector('.phrases-counter');
        if (counterContainer) {
            counterContainer.innerHTML = `
                <span id="total-phrases-count">${totalCount}</span> ${t('phrases_count')} | 
                <span id="selected-phrases-count">${selectedCount}</span> ${t('selected')}
            `;
        }
    }
    
    if (saveCountElement) {
        const count = saveCountElement.textContent;
        const saveButton = document.getElementById('save-selected-btn');
        if (saveButton) {
            saveButton.innerHTML = `${t('save_selected')} (<span id="save-count">${count}</span>)`;
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
function updateValidationMessages() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const requiredInputs = document.querySelectorAll('input[required], textarea[required], select[required]');
    requiredInputs.forEach(input => {
        input.setCustomValidity('');
        input.addEventListener('invalid', function() {
            if (this.validity.valueMissing) {
                if (this.tagName === 'SELECT') {
                    this.setCustomValidity(t('select_item_from_list'));
                } else {
                    this.setCustomValidity(t('fill_this_field'));
                }
            } else {
                this.setCustomValidity(t('enter_valid_value'));
            }
        });
        
        input.addEventListener('input', function() {
            this.setCustomValidity('');
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è i18n –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function initializeI18n() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫
    const savedLanguage = localStorage.getItem('interface_language');
    if (savedLanguage && translations[savedLanguage]) {
        currentLanguage = savedLanguage;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateInterface();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π radio button –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    const languageRadio = document.querySelector(`input[name="language"][value="${currentLanguage}"]`);
    if (languageRadio) {
        languageRadio.checked = true;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
export { t, setLanguage, getCurrentLanguage, updateInterface, initializeI18n };