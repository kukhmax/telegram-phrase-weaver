#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è TTS (Text-to-Speech) —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —è–∑—ã–∫–∞–º–∏
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç gTTS –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º
"""

import os
import sys
from gtts import gTTS
from gtts.lang import tts_langs
import tempfile
import subprocess
from pathlib import Path

def get_available_languages():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –≤ gTTS"""
    try:
        langs = tts_langs()
        return langs
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤: {e}")
        return {}

def test_tts_pronunciation(text, lang_code, tld='com', play_audio=False):
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
    
    Args:
        text (str): –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
        lang_code (str): –ö–æ–¥ —è–∑—ã–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'pl', 'pt', 'en')
        tld (str): Top-level domain –¥–ª—è Google Translate ('com', 'pl', 'pt', etc.)
        play_audio (bool): –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    
    Returns:
        str: –ü—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É –∞—É–¥–∏–æ —Ñ–∞–π–ª—É –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    
    print(f"\nüîä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TTS:")
    print(f"   üìù –¢–µ–∫—Å—Ç: '{text}'")
    print(f"   üåç –Ø–∑—ã–∫: {lang_code}")
    print(f"   üåê TLD: {tld}")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —è–∑—ã–∫–∞
        available_langs = get_available_languages()
        if lang_code not in available_langs:
            print(f"   ‚ùå –Ø–∑—ã–∫ '{lang_code}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è gTTS")
            print(f"   üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏: {list(available_langs.keys())[:10]}...")
            return None
        
        print(f"   ‚úÖ –Ø–∑—ã–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: {available_langs[lang_code]}")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        output_dir = Path("./audio_test")
        output_dir.mkdir(exist_ok=True)
        
        filename = f"test_{lang_code}_{tld}.mp3"
        output_path = output_dir / filename
        
        print(f"   üéØ –°–æ–∑–¥–∞–Ω–∏–µ TTS –æ–±—ä–µ–∫—Ç–∞...")
        
        # –°–æ–∑–¥–∞–µ–º TTS –æ–±—ä–µ–∫—Ç
        tts = gTTS(
            text=text,
            lang=lang_code,
            tld=tld,
            slow=False
        )
        
        print(f"   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª: {output_path}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—É–¥–∏–æ
        tts.save(str(output_path))
        
        print(f"   ‚úÖ –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!")
        print(f"   üìÅ –§–∞–π–ª: {output_path}")
        print(f"   üìè –†–∞–∑–º–µ—Ä: {output_path.stat().st_size} –±–∞–π—Ç")
        
        # –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if play_audio and sys.platform == "darwin":  # macOS
            print(f"   üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ...")
            subprocess.run(["afplay", str(output_path)])
        elif play_audio and sys.platform == "linux":
            print(f"   üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ...")
            subprocess.run(["aplay", str(output_path)])
        
        return str(output_path)
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ TTS: {e}")
        return None

def test_multiple_languages():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —è–∑—ã–∫–æ–≤ —Å –æ–¥–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º"""
    
    test_cases = [
        # –ü–æ–ª—å—Å–∫–∏–π
        {
            'text': 'Uczƒô siƒô portugalskiego.',
            'lang': 'pl',
            'tld': 'com',
            'description': '–ü–æ–ª—å—Å–∫–∏–π —Å com TLD'
        },
        {
            'text': 'Uczƒô siƒô portugalskiego.',
            'lang': 'pl', 
            'tld': 'pl',
            'description': '–ü–æ–ª—å—Å–∫–∏–π —Å pl TLD (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)'
        },
        
        # –ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π
        {
            'text': 'Eu aprendo portugu√™s.',
            'lang': 'pt',
            'tld': 'com',
            'description': '–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π —Å com TLD'
        },
        {
            'text': 'Eu aprendo portugu√™s.',
            'lang': 'pt',
            'tld': 'pt',
            'description': '–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π —Å pt TLD'
        },
        
        # –†—É—Å—Å–∫–∏–π
        {
            'text': '–Ø –∏–∑—É—á–∞—é –ø–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π.',
            'lang': 'ru',
            'tld': 'com',
            'description': '–†—É—Å—Å–∫–∏–π —Å com TLD'
        },
        
        # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        {
            'text': 'I am learning Portuguese.',
            'lang': 'en',
            'tld': 'com',
            'description': '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —Å com TLD'
        }
    ]
    
    print("üéØ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤...\n")
    
    results = []
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\n{'='*60}")
        print(f"–¢–µ—Å—Ç {i}/{len(test_cases)}: {test_case['description']}")
        print(f"{'='*60}")
        
        result = test_tts_pronunciation(
            text=test_case['text'],
            lang_code=test_case['lang'],
            tld=test_case['tld']
        )
        
        results.append({
            'test': test_case['description'],
            'success': result is not None,
            'file': result
        })
    
    # –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"\n{'='*60}")
    print("üìä –°–í–û–î–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
    print(f"{'='*60}")
    
    for result in results:
        status = "‚úÖ –£—Å–ø–µ—Ö" if result['success'] else "‚ùå –û—à–∏–±–∫–∞"
        print(f"{status}: {result['test']}")
        if result['file']:
            print(f"         –§–∞–π–ª: {result['file']}")
    
    success_count = sum(1 for r in results if r['success'])
    print(f"\nüéØ –£—Å–ø–µ—à–Ω–æ: {success_count}/{len(results)}")
    
    return results

def interactive_test():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TTS"""
    
    print("üé§ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TTS")
    print("–í–≤–µ–¥–∏—Ç–µ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞\n")
    
    while True:
        try:
            text = input("üìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: ").strip()
            if text.lower() == 'quit':
                break
                
            lang_code = input("üåç –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —è–∑—ã–∫–∞ (pl, pt, ru, en, etc.): ").strip().lower()
            if not lang_code:
                lang_code = 'en'
                
            tld = input("üåê –í–≤–µ–¥–∏—Ç–µ TLD (com, pl, pt, ru, etc.) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: com]: ").strip().lower()
            if not tld:
                tld = 'com'
                
            play = input("üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ? (y/n) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: n]: ").strip().lower()
            play_audio = play in ['y', 'yes', '–¥–∞']
            
            test_tts_pronunciation(text, lang_code, tld, play_audio)
            
        except KeyboardInterrupt:
            print("\nüëã –í—ã—Ö–æ–¥...")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üéµ TTS –¢–µ—Å—Ç–µ—Ä –¥–ª—è PhraseWeaver")
    print("=" * 40)
    
    if len(sys.argv) > 1:
        mode = sys.argv[1]
    else:
        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
        print("1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (auto)")
        print("2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º (interactive)")
        print("3. –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–ª—å—Å–∫–æ–≥–æ (polish)")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞: ").strip()
        
        if choice in ['1', 'auto']:
            mode = 'auto'
        elif choice in ['2', 'interactive']:
            mode = 'interactive'
        elif choice in ['3', 'polish']:
            mode = 'polish'
        else:
            mode = 'auto'
    
    if mode == 'auto':
        test_multiple_languages()
    elif mode == 'interactive':
        interactive_test()
    elif mode == 'polish':
        # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–ª—å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
        print("üáµüá± –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–ª—å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞...")
        test_tts_pronunciation(
            text="Uczƒô siƒô portugalskiego. Ona uczy siƒô szybko.",
            lang_code="pl",
            tld="com",
            play_audio=True
        )
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: {mode}")
        sys.exit(1)

if __name__ == "__main__":
    main()