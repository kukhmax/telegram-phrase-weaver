version: '3.9'
services:
  backend:
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "8000:8080"
    expose:
      - "8080"
    env_file:
      - .env
    volumes:
      - shared_assets:/app/frontend/assets
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:17.5
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    # Не открываем порт наружу для безопасности

  redis:
    image: redis:8.0
    restart: unless-stopped
    networks:
      - app-network
    # Не открываем порт наружу для безопасности

  frontend:
    image: nginx:alpine
    expose:
      - "80"
    volumes:
      - ./backend/frontend:/usr/share/nginx/html:ro
      - shared_assets:/usr/share/nginx/html/assets:rw
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/ssl/pw-new-club:/etc/ssl/pw-new-club:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      app-network:
      web:
        aliases:
          - weaver

volumes:
  postgres_data:
  shared_assets:

networks:
  app-network:
    driver: bridge
  web:
    external: true
    name: web